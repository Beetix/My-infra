services:
  db:
    image: mariadb:10
    container_name: nextcloud_db
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --skip-innodb-read-only-compressed
    volumes:
      - /docker/cloud/db:/var/lib/mysql
      - db-socket:/var/run/mysqld
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${DB_USER_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USER}
    networks:
      - db

  nextcloud:
    image: nextcloud:30-apache
    container_name: nextcloud
    depends_on:
      - db
      - redis
    networks:
      - proxy
      - db
      - mail
      - redis
    volumes:
      - /docker/cloud/nextcloud:/var/www/html
      - /storage/docker/nextcloud:/var/www/html/data
      - db-socket:/var/run/mysqld
    restart: unless-stopped
    labels:
      - "traefik.http.routers.nextcloud-https.rule=Host(`cloud.${DOMAIN}`)"
      - "traefik.http.routers.nextcloud-https.entryPoints=https"
      - "traefik.http.routers.nextcloud-https.tls.certresolver=main"
      - "traefik.enable=true"

  cron:
    image: nextcloud:30-apache
    container_name: nextcloud_cron
    depends_on:
      - nextcloud
    networks:
      - db
      - redis
    volumes:
      - /docker/cloud/nextcloud:/var/www/html
      - /storage/docker/nextcloud:/var/www/html/data
      - db-socket:/var/run/mysqld
    restart: unless-stopped
    entrypoint: /cron.sh

  redis:
    image: redis:7-alpine
    container_name: nextcloud_redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - redis
    volumes:
      - /docker/cloud/redis:/data
    command: redis-server --requirepass $REDIS_PASSWORD

volumes:
  db-socket:

networks:
  db:
    name: nextcloud_db
  redis:
    name: nextcloud_redis
  proxy:
    external: true
  mail:
    external: true
